[tool.poetry]
name = "bookops-worldcat"
version = "1.0.0"
description = "OCLC WorldCat Metadata APIs wrapper"
authors = ["Tomasz Kalata <klingaroo@gmail.com>", "Charlotte Kostelic <charlottekostelic@gmail.com>"]
license = "MIT"
exclude = ["bookops_worldcat/temp.py", "bookops_worldcat/temp/*"]

packages = [
    {include = "bookops_worldcat"},
    {include = "bookops_worldcat/py.typed"},
]

readme = "README.md"
repository = "https://github.com/BookOps-CAT/bookops-worldcat"
homepage = "https://bookops-cat.github.io/bookops-worldcat/"

keywords = ["api", "api-wrapper", "oclc", "worldcat", "cataloging", "bibliographic records", "marcxml", "holdings", "library metadata", "marc21"]

classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Education",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Software Development :: Libraries :: Python Modules"
]

[tool.poetry.dependencies]
python = "^3.8"
requests = "^2.31"

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/BookOps-CAT/bookops-worldcat/issues"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0"
pytest-cov = "^3.0"
pytest-mock = "^3.7"
mkdocs = "^1.4"
black = "^24.3.0"
mike = "^2.0.0"
mypy = "^1.8"
types-requests = "^2.31.0.20240125"
mkdocs-material = "^9.5.13"
mkdocstrings = "^0.24.1"
mkdocstrings-python = "^1.9.0"

[tool.pytest.ini_options]
testpaths = ["tests"]
markers = [
	"webtest: mark a test hitting live endpoints",
	"holdings: mark holdings live endpoint tests",
	"http_code: use to pass returned http code to 'mock_session_response' fixture that mocks 'requests.Session.send' method",
]

[tool.coverage.run]
relative_files = true
source = ["."]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
exclude = '''
(
    /(
        \.eggs
       | \.git
       | \.hg
       | \.mypy_cache
       | \.tox
       | \.venv
       | _build
       | buck-out
       | build
       | dist
    )/
    | temp.py
)
'''

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
